basePath: /api
definitions:
  dto.UsuariosDTO:
    properties:
      apellidoMaterno:
        type: string
      apellidoPaterno:
        type: string
      createdAt:
        type: string
      email:
        type: string
      estatus:
        type: integer
      fechaNacimiento:
        type: string
      genero:
        $ref: '#/definitions/migrations.Generos'
      id:
        type: integer
      nombres:
        type: string
      rol:
        $ref: '#/definitions/migrations.Roles'
      telefono:
        type: string
      updatedAt:
        type: string
      urlimagen:
        type: string
    type: object
  migrations.Generos:
    properties:
      descripcion:
        type: string
      id:
        type: integer
    type: object
  migrations.Roles:
    properties:
      descripcion:
        type: string
      id:
        type: integer
    type: object
  requests.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
info:
  contact: {}
  description: Ejemplo de API en Go Hecha por Carlos Sandoval.
  title: Swagger Golang Api
paths:
  /v1/auth/login/:
    post:
      consumes:
      - application/json
      parameters:
      - description: login  request
        in: body
        name: Login
        required: true
        schema:
          $ref: '#/definitions/requests.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Login
      tags:
      - Auth
  /v1/auth/logout/:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Logout
      tags:
      - Auth
  /v1/auth/me/:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UsuariosDTO'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Me
      tags:
      - Auth
  /v1/auth/refresh/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Refresh
      tags:
      - Auth
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
